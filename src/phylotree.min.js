!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("d3"),require("underscore"),require("lodash"),require("d3-time-format")):"function"==typeof define&&define.amd?define(["exports","d3","underscore","lodash","d3-time-format"],e):e((t=t||self).phylotree=t.phylotree||{},t.d3,t._,t._$1,t.d3TimeFormat)}(this,(function(t,e,n,s,i){"use strict";function a(t){return!n.has(t,"children")}var r=Object.freeze({__proto__:null,graft_a_node:function(t,e,n,s){let i=this.nodes.descendants();if(t.parent){if(i.indexOf(t)>=0){let i=t.parent.children.indexOf(t),a={name:n,parent:t.parent,attribute:s?s[2]:null,original_child_order:t.original_child_order},r={name:e,parent:a,attribute:s?s[1]:null,original_child_order:2};a.children=[t,r],t.parent.children[i]=a,t.parent=a,t.attribute=s?s[0]:null,t.original_child_order=1}}return this},delete_a_node:function(t){let e=this.nodes.descendants();if("number"!=typeof t)return this.delete_a_node(e.indexOf(t));if(t>0&&t<e.length){let n=e[t];if(n.parent){let s=n.parent.children.indexOf(n);s>=0&&(e.splice(t,1),n.children&&n.children.forEach((function(t){t.original_child_order=n.parent.children.length,n.parent.children.push(t),t.parent=n.parent})),n.parent.children.length>2?n.parent.children.splice(s,1):n.parent.parent?(n.parent.parent.children[n.parent.parent.children.indexOf(n.parent)]=n.parent.children[1-s],n.parent.children[1-s].parent=n.parent.parent,e.splice(e.indexOf(n.parent),1)):(e.splice(0,1),e.parent=null,delete e.data.attribute,delete e.data.annotation,delete e.data.original_child_order,e.name="root",e.data.name="root"))}}return this},get_tips:function(){return n.filter(this.nodes.descendants(),t=>!n.has(t,"children"))},get_internals:function(){return n.filter(this.nodes.descendants(),t=>n.has(t,"children"))},get_root_node:function(){return this.nodes},get_nodes:function(){return this.nodes},get_node_by_name:function(t){return n.filter(this.nodes.descendants(),e=>e.data.name==t)[0]},assign_attributes:function(t){n.each(this.nodes,(function(e){n.indexOf(n.keys(t),e.name)>=0&&(e.annotations=t[e.name])}))},is_leafnode:a,update_key_name:function(t,e){return this.nodes.each((function(n){t in n&&(e&&(n[e]=n[t]),delete n[t])})),this},clear_internal_nodes:function(t){t||this.nodes.each(t=>{a(t)||(t[this.selection_attribute_name]=!1)})}});function o(t,e,n){let s=n||"{",i="{"==s?"}":"]",a=[];function r(){let t=a[a.length-1];"children"in t||(t.children=[]),a.push({name:null}),t.children.push(a[a.length-1]),a[a.length-1].original_child_order=t.children.length}function o(){let t=a.pop();t.name=c,"children"in t?t.bootstrap_values=c:t.name=c,t.attribute=d,t.annotation=_,c="",d="",_=""}function l(e){return{json:null,error:"Unexpected '"+t[e]+"' in '"+t.substring(e-20,e+1)+"[ERROR HERE]"+t.substring(e+1,e+20)+"'"}}let h=0,c="",d="",_="",p=null,u={"'":1,'"':1},f={name:"root"};a.push(f);for(var m=/\s/,g=0;g<t.length;g++)try{var b=t[g];switch(h){case 0:"("==b&&(r(),h=1);break;case 1:case 3:if(":"==b)h=3;else if(","==b||")"==b)try{o(),h=1,","==b&&r()}catch(t){return l(g)}else if("("==b){if(c.length>0)return l(g);r()}else{if(b in u){if(1==h&&0===c.length&&0===d.length&&0===_.length){h=2,p=b;continue}return l(g)}if(b==s){if(_.length)return l(g);h=4}else if(3==h)d+=b;else{if(m.test(b))continue;if(";"==b){g=t.length;break}c+=b}}break;case 2:if(b==p){if(g<t.length-1&&t[g+1]==p){g++,c+=p;continue}p=0,h=1;continue}c+=b;break;case 4:if(b==i)h=3;else{if(b==s)return l(g);_+=b}}}catch(t){return l(g)}return 1!=a.length?l(t.length-1):{json:f,error:null}}function l(t){let e=t,s=e.toUpperCase().indexOf("BEGIN DATA;"),i=e.slice(s);if(i.length<2)return"";s=i.toUpperCase().indexOf("END;");let a=i.slice(0,s);i=n.map(a.split(";"),t=>t.trim());let r=n.filter(i,t=>t.toUpperCase().startsWith("DIMENSION"));r=r[0].split(" "),r=n.object(n.map(n.rest(r),t=>t.split("=")));let o=n.filter(i,t=>t.toUpperCase().startsWith("FORMAT"));o=o[0].split(" "),o=n.object(n.map(n.rest(o),t=>t.split("="))),o.symbols=n.reject(o.symbols.split(""),t=>'"'==t);let l=n.filter(i,t=>t.toUpperCase().startsWith("MATRIX"));return l=l[0].split("\n"),l=n.object(n.map(n.rest(l),t=>n.compact(t.split(" ")))),l=n.mapObject(l,(t,e)=>"?"==t?o.symbols:Array(t)),{dimensions:r,format:o,matrix:l}}function h(t,e,s){n.each(t.get_tips(),t=>{t.data.test=s.matrix[t.data.name]})}function c(t){let e=t,s=e.toUpperCase().indexOf("BEGIN TREES;"),i=e.slice(s);if(i.length<2)return"";s=i.toUpperCase().indexOf("END;");let a=i.slice(0,s).split("\n");return a=n.filter(a,t=>t.trim().toUpperCase().startsWith("TREE")),o(a[0])}var d=Object.freeze({__proto__:null,parse_annotations:l,load_annotations:h,default:c});var _=function(t,e){var n;return(n=(t=function t(e){var n={};if(1==e.nodeType){if(e.attributes.length>0){n["@attributes"]={};for(var s=0;s<e.attributes.length;s++){var i=e.attributes.item(s);n["@attributes"][i.nodeName]=i.nodeValue}}}else 3==e.nodeType&&(n=e.nodeValue);if(e.hasChildNodes()&&1===e.childNodes.length&&3===e.childNodes[0].nodeType)n=e.childNodes[0].nodeValue;else if(e.hasChildNodes())for(var a=0;a<e.childNodes.length;a++){var r=e.childNodes.item(a),o=r.nodeName;if(void 0===n[o])n[o]=t(r);else{if(void 0===n[o].push){var l=n[o];n[o]=[],n[o].push(l)}n[o].push(t(r))}}return n}(t)).phyloxml.phylogeny.clade).name="root",function t(e,n){e.clade&&(e.clade.forEach(t),e.children=e.clade,delete e.clade),e.annotation=1,e.attribute="0.01",e.branch_length&&(e.attribute=e.branch_length),e.taxonomy&&(e.name=e.taxonomy.scientific_name),e.annotation=""}(n),{json:n,error:null}};var p={nexml:function(t,e){var s;return parseString(t,(function(t,e){s=e["nex:nexml"].trees[0].tree.map((function(t){var e=t.node.map(t=>t.$),s=e.reduce((function(t,e){return e.edges=[],e.name=e.id,t[e.id]=e,t}),{}),i=e.filter(t=>t.root),a=i>0?i[0].id:e[0].id;return s[a].name="root",t.edge.map(t=>t.$).forEach((function(t){s[t.source].edges.push(t)})),function t(e,i){if(e.edges){var a=n.pluck(e.edges,"target");e.children=n.values(n.pick(s,a)),e.children.forEach((function(t,n){t.attribute=e.edges[n].length||""})),e.children.forEach(t),e.annotation=""}}(s[a]),s[a]}))})),s},phyloxml:_,nexus:c,nwk:o,beast:function(t){const e=o(t,0,"[");return function t(e){if(e.annotation){e.beast={};const t=e.annotation.split(/=|,|{|}/).filter(t=>t);for(var n=0;n<t.length;n+=2){let s=t[n].replace(/&|%/g,"");/[a-df-zA-DF-Z]+/.test(t[n+2])?e.beast[s]=+t[n+1]:(e.beast[s]=[+t[n+1],+t[n+2]],n++)}}e.annotation=void 0,e.children&&e.children.forEach(t)}(e.json),e}};function u(t,e,n){let s,i,a,r=[t],o=[];for(;t=r.pop();)if((!n||!n(t))&&(o.push(t),s=t.children,s))for(i=0,a=s.length;i<a;++i)r.push(s[i]);for(;t=o.pop();)e(t);return t}function f(t,e,n){let s,i,a=[t];for(;t=a.pop();)if((!n||!n(t))&&(e(t),s=t.children,s))for(i=s.length-1;i>=0;--i)a.push(s[i]);return t}function m(t,e,n){let s,i,a,r,o=[t];do{for(s=o.reverse(),o=[];t=s.pop();)if((!n||!n(t))&&(e(t),i=t.children,i))for(a=0,r=i.length;a<r;++a)o.push(i[a])}while(o.length);return t}function g(t){return u(t,(function(t){t.children&&(t.children[0].data.multiway_parent=t,t.children[1].data.multiway_parent=t.parent)})),s.map(t.descendants(),t=>{let e=t.data.multiway_parent,n="unknown";return e&&(n=e.data.name),{source:t.data.multiway_parent,target:t}})}function b(t,e){let n=t.data;if("attribute"in n&&n.attribute&&n.attribute.length){e>0&&(n.attribute=String(e));let t=parseFloat(n.attribute);if(!isNaN(t))return Math.max(0,t)}}var v=Object.freeze({__proto__:null,reroot:function(t,s){let i=this.nodes.descendants();if(s=void 0!==s?s:.5,t.parent){var a=e.hierarchy({name:"new_root",children:[{name:t.data.name}]});n.extendOwn(a.children[0],t),a.children[0].parent=a,i.forEach(t=>{t.__mapped_bl=this.branch_length_accessor(t),t.data.__mapped_bl=this.branch_length_accessor(t)}),this.set_branch_length((function(t){return t.__mapped_bl||t.data.__mapped_bl}));let o=t,l=t.parent,h=n.noop(),c=void 0===t.data.__mapped_bl?void 0:t.data.__mapped_bl*s;var r;if(h=l.data.__mapped_bl,l.data.__mapped_bl=void 0===t.data.__mapped_bl?void 0:t.__mapped_bl-c,t.data._mapped_bl=c,l.parent){for(a.children.push(l);l.parent;){r=l.children.indexOf(o),l.parent.parent?l.children.splice(r,1,l.parent):l.children.splice(r,1);let t=l.parent.data.__mapped_bl;void 0!==t&&(l.parent.data.__mapped_bl=h,h=t),o=l,l=l.parent}r=l.children.indexOf(o),l.children.splice(r,1)}else r=l.children.indexOf(o),l.children.splice(r,1),h=l.data.__mapped_bl,o=a;if(1==l.children.length)h&&(l.children[0].data.__mapped_bl+=h),o.children=o.children.concat(l.children);else{let s=new e.hierarchy({name:"__reroot_top_clade",__mapped_bl:h});n.extendOwn(a.children[0],t),s.data.__mapped_bl=h,s.children=l.children.map((function(t){return t.parent=s,t})),s.parent=o,o.children.push(s)}}if(this.update(a),this.traverse_and_compute(t=>{n.each(t.children,e=>{e.parent=t})},"pre-order"),!n.isUndefined(this.display)){let t=this.display.container,e=this.display.options;delete this.display,this.render(t,e)}return this},rootpath:function(t,e){if(t=t||"attribute",e=e||"y_scaled","parent"in this){let n=parseFloat(this[t]);this[e]=this.parent[e]+(isNaN(n)?.1:n)}else this[e]=0;return this[e]},path_to_root:function(t){let e=[];for(;t;)e.push(t),t=t.parent;return e}});function y(t){return t.y}function x(t){return t.x}function w(t,e,n){return{x:n+t*Math.sin(e),y:n+t*Math.cos(e)}}function z(t,e,n,s,i,a){t.radius=e*(t.radius+n),t.angle=2*Math.PI*t.x*i[0]/a[0];let r=w(t.radius,t.angle,s);return t.x=r.x,t.y=r.y,t}function k(t,e){var n=w(t[0].radius,t[0].angle,e),s=w(t[0].radius,t[1].angle,e);return"M "+y(n)+","+x(n)+" A "+t[0].radius+","+t[0].radius+" 0,0, "+(t[1].angle>t[0].angle?1:0)+" "+y(s)+","+x(s)+" L "+y(t[1])+","+x(t[1])}function M(t,e,n){var s=w(t.target.radius+(t.source.radius-t.target.radius)*e,t.target.angle,n);return{x:y(s),y:x(s)}}var E=e.line().x((function(t){return y(t)})).y((function(t){return x(t)})).curve(e.curveStepBefore);function A(t,e){return{x:y(t.target)+(y(t.source)-y(t.target))*e,y:x(t.target)}}function O(t){return t.tag||!1}function j(t,e){return t[e]||!1}const N={"tree-container":"phylotree-container","tree-scale-bar":"tree-scale-bar",node:"node","internal-node":"internal-node","tagged-node":"node-tagged","selected-node":"node-selected","collapsed-node":"node-collapsed","root-node":"root-node",branch:"branch","selected-branch":"branch-selected","tagged-branch":"branch-tagged","tree-selection-brush":"tree-selection-brush","branch-tracer":"branch-tracer",clade:"clade",node_text:"phylotree-node-text"};function U(t){return arguments.length?(U="string"==typeof t&&"equal"==t?function(t){return 1}:t,phylotree):U}var C={all:t=>!0,none:t=>!1,"all-leaf-nodes":t=>a(t.target),"all-internal-nodes":t=>!a(t.target)};var S=Object.freeze({__proto__:null,css_classes:N,internal_names:function(t){return arguments.length?(this.options["internal-names"]=t,this):this.options["internal-names"]},radial:function(t){return arguments.length?(this.options["is-radial"]=t,this):this.options["is-radial"]},align_tips:function(t){return arguments.length?(this.options["align-tips"]=t,this):this.options["align-tips"]},node_bubble_size:function(t){return this.options["draw-size-bubbles"]?this.relative_node_span(t)*this.scales[0]*.25:0},shift_tip:function(t){return this.options["is-radial"]?[("end"==t.text_align?-1:1)*(this.radius_pad_for_bubbles-t.radius),0]:(this.options["right-to-left"],[this.right_most_leaf-t.screen_x,0])},layout_handler:function(t){return arguments.length?(this.layout_listener_handler=t,this):this.layout_listener_handler},selection_label:function(t){return arguments.length?(this.selection_attribute_name=t,this.sync_edge_labels(),this):this.selection_attribute_name},get node_span(){return U},predefined_selecters:C,selection_callback:function(t){return t?(this.selection_callback=t,this):this.selection_callback}});function q(t){return!(t.hidden||t.notshown)}function I(t){return t.notshown}function T(t){return t.has_hidden_nodes||!1}function R(t){return t.collapsed||!1}function P(t){return[t.node,t["internal-node"],t["collapsed-node"],t["tagged-node"],t["root-node"]].reduce((function(t,e,n,s){return t+"g."+e+(n<s.length-1?",":"")}),"")}function F(t){return a(t=t.data)?t.name||"":this.show_internal_name(t)?t.name:""}var D=Object.freeze({__proto__:null,shift_tip:function(t){return this.radial()?[("end"==t.text_align?-1:1)*(this.radius_pad_for_bubbles-t.radius),0]:(this.options["right-to-left"],[this.right_most_leaf-t.screen_x,0])},draw_node:function(t,n,s){t=e.select(t);var i=a(n);i&&(t=t.attr("data-node-name",n.data.name));let r=t.selectAll("text").data([n]),o=t.selectAll("line");if(i||this.show_internal_name(n)&&!R(n))if(r=r.enter().append("text").classed(this.css_classes.node_text,!0).merge(r).on("click",this.handle_node_click).attr("dy",t=>.33*this.shown_font_size).text(t=>this.options["show-labels"]?this._node_label(t):"").style("font-size",t=>this.ensure_size_is_in_px(this.shown_font_size)),r=this.radial()?r.attr("transform",t=>this.d3_phylotree_svg_rotate(t.text_angle)+this.d3_phylotree_svg_translate(this.align_tips()?this.shift_tip(t):null)).attr("text-anchor",t=>t.text_align):r.attr("text-anchor","start").attr("transform",t=>"right-to-left"==this.options.layout?this.d3_phylotree_svg_translate([-20,0]):this.d3_phylotree_svg_translate(this.align_tips()?this.shift_tip(t):null)),this.align_tips()?(o=o.data([n]),s?o=o.enter().append("line").classed(this.css_classes["branch-tracer"],!0).merge(o).attr("x1",t=>("end"==t.text_align?-1:1)*this.node_bubble_size(n)).attr("x2",0).attr("y1",0).attr("y2",0).attr("x2",t=>"right-to-left"==this.options.layout?t.screen_x:this.shift_tip(t)[0]).attr("transform",t=>this.d3_phylotree_svg_rotate(t.text_angle)).attr("x2",t=>"right-to-left"==this.options.layout?t.screen_x:this.shift_tip(t)[0]).attr("transform",t=>this.d3_phylotree_svg_rotate(t.text_angle)):(o=o.enter().append("line").classed(this.css_classes["branch-tracer"],!0).merge(o).attr("x1",t=>("end"==t.text_align?-1:1)*this.node_bubble_size(n)).attr("y2",0).attr("y1",0).attr("x2",t=>this.shift_tip(t)[0]),o.attr("transform",t=>this.d3_phylotree_svg_rotate(t.text_angle)))):o.remove(),this.options["draw-size-bubbles"]){var l=this.node_bubble_size(n);t.selectAll("circle").data([l]).enter().append("circle").attr("r",(function(t){return t})),this.shown_font_size>=5&&(r=r.attr("dx",t=>("end"==t.text_align?-1:1)*((this.align_tips()?0:l)+.33*this.shown_font_size)))}else this.shown_font_size>=5&&(r=r.attr("dx",t=>("end"==t.text_align?-1:1)*this.shown_font_size*.33));if(!i){let e=t.selectAll("circle").data([n]).enter().append("circle"),s=this.node_circle_size()(n);s>0?e.merge(e).attr("r",t=>Math.min(.75*this.shown_font_size,s)).on("click",t=>{this.handle_node_click(t)}):e.remove()}return this.node_styler&&this.node_styler(t,n),n},update_has_hidden_nodes:function(){let t=this.phylotree.nodes.descendants();for(let e=t.length-1;e>=0;e-=1)a(t[e])?t[e].has_hidden_nodes=t[e].notshown:t[e].has_hidden_nodes=t[e].children.reduce((function(t,e){return e.notshown||t}),!1);return this},show_internal_name:function(t){const e=this.internal_names();return!!e&&("function"==typeof e?e(t):e)},node_span:function(t){return arguments.length?(this.node_span="string"==typeof t&&"equal"==t?function(t){return 1}:t,this):this.node_span},reclass_node:function(t){let e=N[a(t)?"node":"internal-node"];return O(t)&&(e+=" "+N["tagged-node"]),j(t,this.selection_attribute_name)&&(e+=" "+N["selected-node"]),t.parent||(e+=" "+N["root-node"]),(R(t)||T(t))&&(e+=" "+N["collapsed-node"]),e},node_visible:q,node_notshown:I,has_hidden_nodes:T,is_node_collapsed:R,node_css_selectors:P,internal_label:function(t,e){this.phylotree.clear_internal_nodes(e);for(var n=self.nodes.length-1;n>=0;n--){var s=self.nodes[n];a(s)||j(s,selection_attribute_name)||(s[selection_attribute_name]=t(s.children))}this.modify_selection((function(t,e){return a(t.target),t.target[selection_attribute_name]}))},def_node_label:F,node_label:function(t){return arguments.length?(this._node_label=t||F,this.update(),this):this._node_label}});function L(t){return[t.clade].reduce((function(t,e,n,s){return t+"path."+e+(n<s.length-1?",":"")}),"")}var V=Object.freeze({__proto__:null,clade_css_selectors:L,update_collapsed_clades:function(t){let s=this.svg.selectAll("."+this.css_classes["tree-container"]).selectAll(L(this.css_classes)).data(this.phylotree.nodes.descendants().filter(R),(function(t){return t.id||(t.id=++node_id)})),i=function(){},a=n.noop();this.radial(),i=e.line().curve(e.curveBasis).y((function(t){return t[0]})).x((function(t){return t[1]})),a=function(t,e,n,s,i){return e?[n.screen_y+(t[0]-s)/50,n.screen_x+(t[1]-i)/50]:[n.screen_y,n.screen_x]},s.exit().each((function(t){t.collapsed_clade=null})).remove(),t?s.enter().insert("path",":first-child").attr("class",this.css_classes.clade).merge(s).attr("d",(function(t){if(t.collapsed_clade)return t.collapsed_clade;let e=t.collapsed[0][0],n=t.collapsed[0][1];return i(t.collapsed.map((function(s,i){return a(s,i,t,e,n)})))})).attr("d",(function(t){return t.collapsed_clade=i(t.collapsed)})):s.enter().insert("path",":first-child").attr("class",this.css_classes.clade).merge(s).attr("d",(function(t){return t.collapsed_clade=i(t.collapsed)}))}});function B(t){return!(t.target.hidden||t.target.notshown)}function W(t){return[t.branch,t["selected-branch"],t["tagged-branch"]].reduce((function(t,e,n,s){return t+"path."+e+(n<s.length-1?",":"")}),"")}var X=Object.freeze({__proto__:null,draw_edge:function(t,n,s){t=(t=e.select(t)).attr("class",t=>this.reclass_edge(t)).on("click",t=>{this.modify_selection([t.target],this.selection_attribute_name)});let i=this.draw_branch([n.source,n.target]);s?(t.datum().existing_path&&(t=t.attr("d",(function(t){return t.existing_path}))),t=t.attr("d",i)):t=t.attr("d",i),n.existing_path=i;var a=this.phylotree.branch_length_accessor(n.target);if(void 0!==a){var r=t.selectAll("title");r.empty()&&(r=t.append("title")),r.text("Length = "+a)}else t.selectAll("title").remove();return this.edge_styler&&this.edge_styler(t,n,s),this.phylotree},reclass_edge:function(t){let e=N.branch;return O(t)&&(e+=" "+N["tagged-branch"]),j(t,this.selection_attribute_name)&&(e+=" "+N["selected-branch"]),e},sync_edge_labels:function(){if(this.phylotree.links.forEach(t=>{t[this.selection_attribute_name]=t.target[this.selection_attribute_name]||!1,t.tag=t.target.tag||!1}),this.count_handler()){let t={};t[this.selection_attribute_name]=this.phylotree.links.reduce((t,e)=>t+(e[this.selection_attribute_name]?1:0),0),t.tagged=this.phylotree.links.reduce((function(t,e){return t+(O(e)?1:0)}),0),this.count_update(this,t,this.count_handler())}},edge_visible:B,edge_css_selectors:W,place_along_an_edge:function(t,e){return this.edge_placer(t,e)}});function G(t){var e=new CustomEvent("phylotree.event",{detail:["refresh",t]});document.dispatchEvent(e)}function H(t,e){var n=new CustomEvent("phylotree.event",{detail:["count_update",e,t.count_handler()]});document.dispatchEvent(n)}function Y(t){switch(t.detail[0]){case"refresh":t.detail[1].refresh();break;case"count_update":case"layout":t.detail[2](t.detail[1])}return!0}var J=Object.freeze({__proto__:null,toggle_collapse:function(t){if(t.collapsed){t.collapsed=!1;let e=function(t){a(t)||t.collapsed||t.children.forEach(e),t.hidden=!1};e(t)}else t.collapsed=!0;return this.placenodes(),this},resize_svg:function(t,e,n){let s=this.size;if(this.radial()){let t=this.pad_width(),n="fit-to-size"!=this.options["top-bottom-spacing"]?this.pad_height():0;s=[s[1]+2*t,s[0]+2*t+n],e&&e.selectAll("."+N["tree-container"]).attr("transform","translate ("+t+","+(t+n)+")")}else s=[s[0]+("fit-to-size"!=this.options["top-bottom-spacing"]?this.pad_height():0),s[1]+("fit-to-size"!=this.options["left-right-spacing"]?this.pad_width():0)];return e&&(n&&(e=e.transition(100)),e.attr("height",s[0]).attr("width",s[1])),this.size=s,s},rescale:function(t,e){(e=e||"y_scaled")in this&&(this[e]*=t)},trigger_refresh:G,count_update:H,d3_phylotree_trigger_layout:function(t){var e=new CustomEvent("phylotree.event",{detail:["layout",t,t.layout_handler()]});document.dispatchEvent(e)},d3_phylotree_event_listener:Y,d3_phylotree_add_event_listener:function(){document.addEventListener("phylotree.event",Y,!1)},d3_phylotree_svg_translate:function(t){return!t||null===t[0]&&null===t[1]?"":"translate ("+(null!==t[0]?t[0]:0)+","+(null!==t[1]?t[1]:0)+") "},d3_phylotree_svg_rotate:function(t){return null!==t?"rotate ("+t+") ":""}});var Z=Object.freeze({__proto__:null,node_dropdown_menu:function(t,s,i,r){let o=e.select(s).select("#d3_layout_phylotree_context_menu");if(o.empty()&&(o=e.select(s).append("div").attr("id","d3_layout_phylotree_context_menu").attr("class","dropdown-menu").attr("role","menu")),o.selectAll("a").remove(),o.selectAll("h6").remove(),o.selectAll("div").remove(),t){if(!n.some([Boolean(t.menu_items),r.hide,r.selectable,r.collapsible])||!r["show-menu"])return;a(t)||(r.collapsible&&(o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text(R(t)?"Expand Subtree":"Collapse Subtree").on("click",e=>{o.style("display","none"),this.toggle_collapse(t).update()}),r.selectable&&(o.append("div").attr("class","dropdown-divider"),o.append("h6").attr("class","dropdown-header").text("Toggle selection"))),r.selectable&&(o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("All descendant branches").on("click",(function(e){o.style("display","none"),i.modify_selection(i.select_all_descendants(t,!0,!0))})),o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("All terminal branches").on("click",(function(e){o.style("display","none"),i.modify_selection(i.select_all_descendants(t,!0,!1))})),o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("All internal branches").on("click",(function(e){o.style("display","none"),i.modify_selection(i.select_all_descendants(t,!1,!0))})))),t.parent&&(r.selectable&&(o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("Incident branch").on("click",(function(e){o.style("display","none"),i.modify_selection([t])})),o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("Path to root").on("click",e=>{o.style("display","none"),this.modify_selection(this.phylotree.path_to_root(t))}),(r.reroot||r.hide)&&o.append("div").attr("class","dropdown-divider")),r.reroot&&o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("Reroot on this node").on("click",e=>{o.style("display","none"),this.phylotree.reroot(t),this.refresh().update()}),r.hide&&o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("Hide this "+(a(t)?"node":"subtree")).on("click",e=>{o.style("display","none"),this.modify_selection([t],"notshown",!0,!0).update_has_hidden_nodes().update()})),T(t)&&o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text("Show all descendant nodes").on("click",(function(e){o.style("display","none"),i.modify_selection(i.select_all_descendants(t,!0,!0),"notshown",!0,!0,"false").update_has_hidden_nodes().update()}));var l=[];if("menu_items"in t&&"object"==typeof t.menu_items&&t.menu_items.forEach((function(e){3==e.length&&(e[2]&&!e[2](t)||l.push([e[0],e[1]]))})),l.length){const e=[r.hide,r.selectable,r.collapsible];n.some(e)&&o.append("div").attr("class","dropdown-divider"),l.forEach((function(e){o.append("a").attr("class","dropdown-item").attr("tabindex","-1").text(constant(e[0])(t)).on("click",n.partial(e[1],t))}))}let h=$(s),c=e.mouse(h[0]);o.style("position","absolute").style("left",c[0]+"px").style("top",c[1]+"px").style("display","block")}else o.style("display","none")},add_custom_menu:function(t,e,n,s){"menu_items"in t||(t.menu_items=[]),t.menu_items.some((function(t){return t[0]==e&&t[1]==n&&t[2]==s}))||t.menu_items.push([e,n,s])},modify_selection:function(t,e,s,i,a){if(e=e||this.selection_attribute_name,a=a||"toggle",this.options["restricted-selectable"].length){if(!n.contains(n.keys(C),t))return;t=C[t]}if(!this.options["restricted-selectable"]&&!this.options.selectable||this.options["binary-selectable"])this.options["binary-selectable"]&&("function"==typeof t?this.phylotree.links.forEach((function(n){var s=t(n);n[e]=n[e]||!1,n[e]!=s&&(n[e]=s,o=!0,n.target[e]=s),this.options["attribute-list"].forEach((function(t){t!=e&&!0===n[e]&&(n[t]=!1,n.target[t]=!1)}))})):(t.forEach((function(t){var n;n=!t[e],t[e]!=n&&(t[e]=n,o=!0)})),this.phylotree.links.forEach((function(t){t[e]=t.target[e],this.phylotree.options["attribute-list"].forEach((function(n){n!=e&&!0!==t[e]&&(t[n]=!1,t.target[n]=!1)}))}))),o&&(i||G(this),this.count_handler()&&((r={})[e]=this.phylotree.links.reduce((function(t,n){return t+(n[e]?1:0)}),0),this.count_update(this,r,this.count_handler())),s&&this.placenodes()));else{var r,o=!1;"function"==typeof t?this.phylotree.links.forEach((function(n){var s=t(n);n[e]=n[e]||!1,n[e]!=s&&(n[e]=s,o=!0,n.target[e]=s)})):(t.forEach((function(t){var n;switch(a){case"true":n=!0;break;case"false":n=!1;break;default:n=!t[e]}t[e]!=n&&(t[e]=n,o=!0)})),this.links.forEach((function(t){t[e]=t.target[e]}))),o&&(i||G(this),this.count_handler()&&((r={})[e]=this.phylotree.links.reduce((function(t,n){return t+(n[e]?1:0)}),0),H(this,r,this.count_handler())),s&&this.placenodes())}return this.selection_callback&&"tag"!=e&&this.selection_callback(this.get_selection()),this.refresh(),this},get_selection:function(){return this.phylotree.nodes.filter(t=>t[this.selection_attribute_name])},select_all_descendants:function(t,e,n){let s=[];return function i(r){a(r)?e&&r!=t&&s.push(r):(n&&r!=t&&s.push(r),r.children.forEach(i))}(t),s},selection_callback:function(t){return t?(this.selection_callback=t,this):this.selection_callback}});function K(t){return function(){return t}}class Q{constructor(t,e,s={}){this.css_classes=N,this.phylotree=t,this.container=e,this.separation=function(t,e){return 0},this._node_label=this.def_node_label,this.svg=null,this.selection_callback=null,this.scales=[1,1],this.size=[1,1],this.fixed_width=[30,20],this.font_size=12,this.scale_bar_font_size=12,this.offsets=[0,this.font_size/2],this.draw_branch=E,this.draw_scale_bar=null,this.edge_placer=A,this.count_listener_handler=function(){},this.layout_listener_handler=function(){},this.node_styler=void 0,this.edge_styler=void 0,this.shown_font_size=this.font_size,this.selection_attribute_name="selected",this.right_most_leaf=0,this.label_width=0,this.radial_center=0,this.radius=1,this.radius_pad_for_bubbles=0,this.rescale_node_span=1,this.node_span=function(t){return 1},this.relative_node_span=function(t){return this.node_span(t)/this.rescale_node_span};let i={layout:"left-to-right",logger:console,branches:"step",scaling:!0,bootstrap:!1,"color-fill":!0,"internal-names":!1,selectable:!0,"restricted-selectable":!1,collapsible:!0,"left-right-spacing":"fixed-step","top-bottom-spacing":"fixed-step","left-offset":0,"show-scale":"top","draw-size-bubbles":!1,"binary-selectable":!1,"is-radial":!1,"attribute-list":[],"max-radius":768,"annular-limit":.38196601125010515,compression:.2,"align-tips":!1,"maximum-per-node-spacing":100,"minimum-per-node-spacing":2,"maximum-per-level-spacing":100,"minimum-per-level-spacing":10,node_circle_size:K(3),transitions:null,brush:!0,reroot:!0,hide:!0,"label-nodes-with-name":!1,zoom:!1,"show-menu":!0,"show-labels":!0};this.ensure_size_is_in_px=function(t){return"number"==typeof t?t+"px":t},this.options=n.defaults(s,i),this.width=this.options.width||800,this.height=this.options.height||600,this.rescale_node_span=this.phylotree.nodes.children.map(t=>{if(a(t)||this.show_internal_name(t))return this.node_span(t)}).reduce((function(t,e){return Math.min(e,t||1e200)}),null)||1,this.initialize_svg(this.container),this.links=this.phylotree.nodes.links(),this.update()}pad_height(){return this.draw_scale_bar?this.scale_bar_font_size+25:0}pad_width(){this.label_width=this._label_width(this.shown_font_size);const t=this.options["show-labels"]?this.label_width:0;return this.offsets[1]+this.options["left-offset"]+t}collapse_node(t){R(t)||(t.collapsed=!0)}set_size(t){if(!arguments.length)return this.size;let e=t;return"fixed-step"!=this.options["top-bottom-spacing"]&&(this.size[0]=e[0]),"fixed-step"!=this.options["left-right-spacing"]&&(this.size[1]=e[1]),this}initialize_svg(t){return arguments.length?(this.svg!==t&&(e.select(t).select("svg").remove(),this.svg=e.select(t).append("svg").attr("width",this.width).attr("height",this.height),this.set_size([this.height,this.width]),"phylotree-container"==this.css_classes["tree-container"]&&(this.svg.selectAll("*").remove(),this.svg.append("defs")),e.select(this.container).on("click",t=>{this.handle_node_click(null)},!0)),this):this.svg}update_layout(t,n){n&&(this.nodes=e.hierarchy(t),this.nodes.each((function(t){t.id=null}))),this.update(),this.sync_edge_labels()}update(t){var s=this;if(!this.svg)return this;this.placenodes(),t=this.transitions(t);let i=0,r=this.svg.selectAll("."+N["tree-container"]).data([0]);if(r=r.enter().append("g").attr("class",N["tree-container"]).merge(r).attr("transform",t=>this.d3_phylotree_svg_translate([this.offsets[1]+this.options["left-offset"],this.pad_height()])),this.draw_scale_bar){let t=this.svg.selectAll("."+N["tree-scale-bar"]).data([0]);t.enter().append("g").attr("class",N["tree-scale-bar"]).style("font-size",this.ensure_size_is_in_px(this.scale_bar_font_size)).merge(t).attr("transform",t=>this.d3_phylotree_svg_translate([this.offsets[1]+this.options["left-offset"],this.pad_height()-10])).call(this.draw_scale_bar),t.selectAll("text").style("text-anchor","end")}else this.svg.selectAll("."+N["tree-scale-bar"]).remove();r=this.svg.selectAll("."+N["tree-container"]).data([0]),this.update_collapsed_clades(t);let o=r.selectAll(W(N)).data(this.links.filter(B),t=>t.target.id||(t.target.id=++i));o.exit().remove(),o=o.enter().insert("path",":first-child").merge(o).each((function(e){s.draw_edge(this,e,t)}));let l=r.selectAll(P(N)).data(this.phylotree.nodes.descendants().filter(q),t=>t.id||(t.id=++i));if(l.exit().remove(),l=l.enter().append("g").attr("class",this.reclass_node).merge(l).attr("transform",t=>{const e="right-to-left"==this.options.layout&&a(t);return t.screen_x=y(t),t.screen_y=x(t),this.d3_phylotree_svg_translate([e?0:t.screen_x,t.screen_y])}).each((function(e){s.draw_node(this,e,t)})).attr("transform",t=>{if(!n.isUndefined(t.screen_x)&&!n.isUndefined(t.screen_y))return"translate("+t.screen_x+","+t.screen_y+")"}),this.options["label-nodes-with-name"]&&(l=l.attr("id",t=>"node-"+t.name)),this.resize_svg(this.phylotree,this.svg,t),this.options.brush){var h=r.selectAll("."+N["tree-selection-brush"]).data([0]).enter().insert("g",":first-child").attr("class",N["tree-selection-brush"]),c=e.brush().on("brush",()=>{var t=e.event.target.extent(),n=this.links.filter(B).filter((e,n)=>e.source.screen_x>=t[0][0]&&e.source.screen_x<=t[1][0]&&e.source.screen_y>=t[0][1]&&e.source.screen_y<=t[1][1]&&e.target.screen_x>=t[0][0]&&e.target.screen_x<=t[1][0]&&e.target.screen_y>=t[0][1]&&e.target.screen_y<=t[1][1]).map(t=>t.target);this.modify_selection(this.phylotree.links.map(t=>t.target),"tag",!1,n.length>0,"false"),this.modify_selection(n,"tag",!1,!1,"true")}).on("end",()=>{});h.call(c)}if(this.sync_edge_labels(),this.options.zoom){let t=e.behavior.zoom().scaleExtent([.1,10]).on("zoom",()=>{let t=e.event.translate;t[0]+=this.offsets[1]+this.options["left-offset"],t[1]+=this.pad_height(),e.select("."+N["tree-container"]).attr("transform","translate("+t+")scale("+e.event.scale+")")});this.svg.call(t)}return this}_handle_single_node_layout(t,e,n,s,i){let a=this.node_span(t)/this.rescale_node_span;return this.x=t.x=this.x+this.separation(e,t)+.5*(n+a),this._extents[1][1]=Math.max(this._extents[1][1],t.y),this._extents[1][0]=Math.min(this._extents[1][0],t.y-.5*a),this._extents[0][1]=s?Math.max(this._extents[0][1],i+(t.x-i)*this.options.compression+this.save_span+(.5*a+this.separation(e,t))*this.options.compression):Math.max(this._extents[0][1],this.x+.5*a+this.separation(e,t)),e=t,n=a,this.last_node=e,this.last_span=n,[e,n]}tree_layout(t){if(I(t))return;let e=a(t);t.text_angle=null,t.text_align=null,t.radius=null,t.angle=null;let n=!1,s=!1;if(t.parent)if(this.do_scaling){if(n)return 0;if(t.y=this.phylotree.branch_length_accessor(t),void 0===t.y)return n=!0,0;t.y+=t.parent.y}else t.y=e?this.max_depth:t.depth;else this.x=0,t.y=0;if(e&&this._handle_single_node_layout(t,null,0,s,0),!e)if(R(t)&&!s){let e=this.x;if(this.save_span=.5*this.last_span,s=!0,this.process_internal_node(t),s=!1,"number"==typeof t.x){t.x=e+(t.x-e)*this.options.compression+this.save_span,t.collapsed=[[t.x,t.y]];var i=n=>{n.hidden=!0,a(n)?(this.x=n.x=e+(n.x-e)*this.options.compression+this.save_span,t.collapsed.push([n.x,n.y])):n.children.map(i)};this.x=e,i(t),t.collapsed.splice(1,0,[e,t.y]),t.collapsed.push([this.x,t.y]),t.collapsed.push([t.x,t.y]),t.hidden=!1}}else this.process_internal_node(t);return t.x}process_internal_node(t){let e=0;if(this.show_internal_name(t)){let e=t.children.length/2>>0,n=0,s=!1;for(let i=0;i<t.children.length;i++){"number"==typeof this.tree_layout(t.children[i]).bind(this)&&n++,n>=e&&!s&&(this._handle_single_node_layout(t),s=!0)}0==n?(t.notshown=!0,t.x=void 0):s||this._handle_single_node_layout(t)}else t.x=t.children.map(this.tree_layout.bind(this)).reduce((t,n)=>"number"==typeof n?t+n:(e+=1,t),0),e==t.children.length?(t.notshown=!0,t.x=void 0):t.x/=t.children.length-e}do_lr(t){if(this.radial()&&t&&(this.offsets[1]=0),"fixed-step"==this.options["left-right-spacing"])this.size[1]=this.max_depth*this.fixed_width[1],this.scales[1]=(this.size[1]-this.offsets[1]-this.options["left-offset"])/this._extents[1][1],this.label_width=this._label_width(this.shown_font_size),this.radial()&&(this.label_width*=2);else{this.label_width=this._label_width(this.shown_font_size),t=!0;let e=this.size[1]-this.offsets[1]-this.options["left-offset"];.5*e<this.label_width&&(this.shown_font_size*=.5*e/this.label_width,this.label_width=.5*e),this.scales[1]=(this.size[1]-this.offsets[1]-this.options["left-offset"]-this.label_width)/this._extents[1][1]}}placenodes(){this._extents=[[0,0],[0,0]];this.save_x=0,this.save_span=0,this.do_scaling=this.options.scaling;this.is_under_collapsed_parent=!1,this.max_depth=1,this.phylotree.nodes.x=this.tree_layout(this.phylotree.nodes,this.do_scaling),this.max_depth=e.max(this.phylotree.nodes.descendants(),t=>t.depth),this.do_scaling;let t=!1;if(this.draw_scale_bar=this.options["show-scale"]&&this.do_scaling,this.offsets[1]=Math.max(this.font_size,-this._extents[1][0]*this.fixed_width[0]),"fixed-step"==this.options["top-bottom-spacing"]?(this.size[0]=this._extents[0][1]*this.fixed_width[0],this.scales[0]=this.fixed_width[0]):(this.scales[0]=(this.size[0]-this.pad_height())/this._extents[0][1],t=!0),this.shown_font_size=Math.min(this.font_size,this.scales[0]),this.radial()){this.draw_branch=n.partial(k,n,this.radial_center),this.edge_placer=M;let e=null,s=null,i=null,a=0,r=this._extents[0][1]*this.scales[0],o=function(t,e,n,s,i){return i=i||0,Math.sqrt((e-t)*(e-t)+2*(t+i)*(e+i)*(1-Math.cos(n-s)))},l=0;this.phylotree.nodes.each(t=>{let e=t.x*this.scales[0];t.angle=2*Math.PI*e/r,t.text_angle=t.angle-Math.PI/2,t.text_angle=t.text_angle>0&&t.text_angle<Math.PI,t.text_align=t.text_angle?"end":"start",t.text_angle=(t.text_angle?180:0)+180*t.angle/Math.PI}),this.do_lr(t),this.phylotree.nodes.each(t=>{t.radius=t.y*this.scales[1]/this.size[1],l=Math.max(t.radius,l)});let h=0;this.phylotree.nodes.each(t=>{if(!t.children){let n=t.x*this.scales[0];if(null!==e){let r=n-s,c=o(t.radius,i,t.angle,e,h),d=c>0?r/c:10*this.options["max-radius"];if(d>this.options["max-radius"]){let n=r/this.options["max-radius"],s=t.radius+i,o=t.radius*i-(n*n-(i-t.radius)*(i-t.radius))/2/(1-Math.cos(e-t.angle)),c=Math.sqrt(s*s-4*o);h=Math.min(this.options["annular-limit"]*l,(-s+c)/2),a=this.options["max-radius"]}else a=Math.max(a,d)}e=t.angle,s=n,i=t.radius}}),this.radius=Math.min(this.options["max-radius"],Math.max(r/2/Math.PI,a)),t&&(this.radius=Math.min(this.radius,.5*(Math.min(r,this._extents[1][1]*this.scales[1])-this.label_width)-this.radius*h)),this.radial_center=this.radius_pad_for_bubbles=this.radius,this.draw_branch=n.partial(k,n,this.radial_center);let c=1;h&&(c=l/(l+h),this.radius*=c),this.phylotree.nodes.each(t=>{if(z(t,this.radius,h,this.radial_center,this.scales,this.size),l=Math.max(l,t.radius),this.options["draw-size-bubbles"]?this.radius_pad_for_bubbles=Math.max(this.radius_pad_for_bubbles,t.radius+this.node_bubble_size(t)):this.radius_pad_for_bubbles=Math.max(this.radius_pad_for_bubbles,t.radius),t.collapsed){t.collapsed=t.collapsed.map(t=>{let e={};return e.x=t[0],e.y=t[1],e=z(e,this.radius,h,this.radial_center,this.scales,this.size),[e.x,e.y]});let e=t.collapsed[1];t.collapsed=t.collapsed.filter((function(n,s){return s<3||s>t.collapsed.length-4||Math.sqrt(Math.pow(n[0]-e[0],2)+Math.pow(n[1]-e[1],2))>3&&(e=n,!0)}))}}),this.size[0]=this.radial_center+this.radius/c,this.size[1]=this.radial_center+this.radius/c}else this.do_lr(),this.draw_branch=E,this.edge_placer=A,this.right_most_leaf=0,this.phylotree.nodes.each(t=>{if(t.x*=this.scales[0],t.y*=.8*this.scales[1],"right-to-left"==this.options.layout&&(t.y=this._extents[1][1]*this.scales[1]-t.y),a(t)&&(this.right_most_leaf=Math.max(this.right_most_leaf,t.y+this.node_bubble_size(t))),t.collapsed){t.collapsed.map(t=>[t[0]*=this.scales[0],t[1]*=this.scales[1]]);let e=t.collapsed[1][0];t.collapsed=t.collapsed.filter((function(n,s){return s<3||s>t.collapsed.length-4||n[0]-e>3&&(e=n[0],!0)}))}});if(this.draw_scale_bar){let t,n;if(this.radial()){if(n=Math.min(this.radius/5,50),t=Math.pow(10,Math.ceil(Math.log(this._extents[1][1]*n/this.radius)/Math.log(10))),n=t*(this.radius/this._extents[1][1]),n<30){let e=Math.ceil(30/n);n*=e,t*=e}}else t=this._extents[1][1],n=this.size[1]-this.offsets[1]-this.options["left-offset"];let s=e.scaleLinear().domain([0,t]).range([this.shown_font_size,this.shown_font_size+n]),i=e.format(".2g");if(this.draw_scale_bar=e.axisTop().scale(s).tickFormat((function(t){return 0===t?"":i(t)})),this.radial())this.draw_scale_bar.tickValues([t]);else{let t=function(t,e){return e?Math.round(t*(e=Math.pow(10,e)))/e:Math.round(t)},e=s.ticks();e=e.length>1?e[1]:e[0],this.draw_scale_bar.ticks(Math.min(10,t(n/(this.shown_font_size*i(e).length*.8),0)))}}else this.draw_scale_bar=null;return this}spacing_x(t,e){return arguments.length?(this.fixed_width[0]!=t&&t>=this.options["minimum-per-node-spacing"]&&t<=this.options["maximum-per-node-spacing"]&&(this.fixed_width[0]=t,e||this.placenodes()),this):this.fixed_width[0]}spacing_y(t,e){return arguments.length?(this.fixed_width[1]!=t&&t>=this.options["minimum-per-level-spacing"]&&t<=this.options["maximum-per-level-spacing"]&&(this.fixed_width[1]=t,e||this.placenodes()),this):this.fixed_width[1]}_label_width(t){t=t||this.shown_font_size;let e=0;return this.phylotree.nodes.descendants().filter(q).forEach(n=>{let s=12+this._node_label(n).length*t*.8;null!==n.angle&&(s*=Math.max(Math.abs(Math.cos(n.angle)),Math.abs(Math.sin(n.angle)))),e=Math.max(s,e)}),e}font_size(t){return arguments.length?(this.font_size=void 0===t?12:t,this):this.font_size}scale_bar_font_size(t){return arguments.length?(this.scale_bar_font_size=void 0===t?12:t,this):this.scale_bar_font_size}node_circle_size(t,e){return arguments.length?(this.options.node_circle_size=K(void 0===t?3:t),this):this.options.node_circle_size}css(t){if(0===arguments.length)return this.css_classes;if(arguments.length>2){var e={};return e[t[0]]=t[1],this.css(e)}for(var n in N)n in t&&t[n]!=N[n]&&(N[n]=t[n]);return this}transitions(t){return void 0!==t?t:null!==this.options.transitions?this.options.transitions:this.phylotree.nodes.descendants().length<=300}css_classes(t,e){if(!arguments.length)return this.css_classes;let n=!1;for(var s in N)s in t&&t[s]!=this.css_classes[s]&&(n=!0,this.css_classes[s]=t[s]);return e&&n&&this.layout(),this}layout(t){return this.svg?(this.svg.selectAll("."+this.css_classes["tree-container"]+",."+this.css_classes["tree-scale-bar"]+",."+this.css_classes["tree-selection-brush"]),this.d3_phylotree_trigger_layout(this),this.update()):(this.d3_phylotree_trigger_layout(this),this)}handle_node_click(t){this.node_dropdown_menu(t,this.container,this,this.options)}refresh(){if(this.svg){let t=this.svg.selectAll("."+this.css_classes["tree-container"]).selectAll(W(this.css_classes)).attr("class",this.reclass_edge.bind(this));this.edge_styler&&t.each((function(t){this.edge_styler(e.select(this),t)}))}return this}count_handler(t){return arguments.length?(this.count_listener_handler=t,this):this.count_listener_handler}style_nodes(t){return arguments.length?(this.node_styler=t,this):this.node_styler}style_edges(t){return arguments.length?(this.edge_styler=t.bind(this),this):this.edge_styler}item_selected(t,e){return t[e]||!1}}n.extend(Q.prototype,V),n.extend(Q.prototype,D),n.extend(Q.prototype,X),n.extend(Q.prototype,J),n.extend(Q.prototype,Z),n.extend(Q.prototype,S);let tt=class{constructor(t,s={}){this.newick_string="",this.nodes=[],this.links=[],this.parsed_tags=[],this.partitions=[],this.branch_length_accessor=b,this.branch_length=b,this.logger=s.logger||console,this.selection_attribute_name="selected";s.bootstrap_values;var i=s.type||void 0,a=[];if(n.isString(i))i in p?a=p[i](t,s):this.logger.error("type "+i+" not in registry! Available types are "+n.keys(p));else if(n.isFunction(i))try{a=i(t,s)}catch(t){this.logger.error("Could not parse custom format!")}else"root"==t.name?a={json:t,error:null}:"string"!=typeof t?a=t:"application/xml"==t.contentType?a=_(t):(this.newick_string=t,a=o(t));if(a.json){this.nodes=e.hierarchy(a.json);let t={};this.nodes.each(e=>{e.data.annotation&&(t[e.data.annotation]=!0)}),this.parsed_tags=Object.keys(t)}else this.nodes=[];return this.links=this.nodes.links(),this}json(t){var e=0;this.traverse_and_compute((function(t){t.json_export_index=e++}),t);var s=new Array(e);return e=0,this.traverse_and_compute((function(t){let i=n.clone(t);delete i.json_export_index,t.parent&&(i.parent=t.parent.json_export_index),t.children&&(i.children=n.map(t.children,(function(t){return t.json_export_index}))),s[e++]=i}),t),this.traverse_and_compute((function(t){delete t.json_export_index}),t),JSON.stringify(s)}traverse_and_compute(t,e,s,i){return(e="pre-order"==(e=e||"post-order")?function(e){f(e,t,i)}:"in-order"==e?function(e){m(e,t,i)}:function(e){n.isUndefined(e)||u(e,t,i)})(s||this.nodes),this}get_parsed_tags(){return this.parsed_tags}update(t){this.nodes=t}render(t,e){return this.display=new Q(this,t,e),this.display}};function et(t){var e=t.branch_length_accessor;if(!e)throw"A non-null branch lengths accessor function is required for this operation";var s=0;function i(t){for(var e=0;e<t.children.length;e++)for(var s=0;s<t.children.length;s++)e!=s&&n.each(t.children[s].cot_path_to_leaves_below,(function(n,i){t.children[e].cot_path_to_leaves_above&&(t.children[e].cot_path_to_leaves_above[i]=n+t.children[s].cot_computed_length)}))}return t.traverse_and_compute((function(i){if(i.cot_computed_length=e(i),i.parent&&n.isUndefined(i.cot_computed_length))throw"Non-null branch lengths are required for this operation: missing branch length at node "+i.data.name;t.is_leafnode(i)?(i.cot_leaf_index=s++,i.cot_path_to_leaves_below={},i.cot_path_to_leaves_below[i.cot_leaf_index]=0,i.cot_path_to_leaves_above={}):(i.cot_path_to_leaves_below={},i.cot_path_to_leaves_above={})})),t.traverse_and_compute((function(t){t.parent&&n.each(t.cot_path_to_leaves_below,(function(e,n){t.parent.cot_path_to_leaves_below[n]=e+t.cot_computed_length}))})),i(t.get_root_node()),t.traverse_and_compute((function(e){e.parent&&(n.each(e.parent.cot_path_to_leaves_above,(function(t,n){e.cot_path_to_leaves_above[n]=t+e.parent.cot_computed_length})),t.is_leafnode(e)||i(e))}),"pre-order"),s}function nt(t){var e=t.reduce((function(t,e){return e[2]+t}),0),n=t.reduce((function(t,e){return e[2]*e[0]+t}),0),s=t.reduce((function(t,e){return e[2]*e[1]+t}),0),i=n/e,a=s/e,r=0,o=0,l=0;t.forEach((function(t){var e=t[0]-i;o+=t[2]*e*e,r+=t[2]*e*t[1],l+=t[2]*(t[1]-a)*(t[1]-a)}));var h=(s-n*(r/=o))/e,c=0;return t.forEach((function(t){var e=t[1]-h-r*t[0];c+=t[2]*e*e})),{intercept:h,slope:r,r2:1-c/l,"var (intercept)":Math.sqrt((1+n*n/(e*o))/e),"var (slope)":Math.sqrt(1/o)}}function st(t){var e=t.branch_length_accessor,s=0;t.traverse_and_compute(i=>{if(i.parent&&(i.data._computed_length=e(i),!n.isNumber(i.data._computed_length)))throw"root_to_tip cannot be run on trees with missing branch lengths";t.is_leafnode(i)&&(i.data.leaf_index=s++),"r2t"in i.data&&delete i.data.r2t}),t.traverse_and_compute(e=>{e.parent&&("r2t"in e.parent.data||(e.parent.data.r2t={}),t.is_leafnode(e)?e.parent.data.r2t[e.data.leaf_index]=e.data._computed_length:(n.each(e.data.r2t,(function(t,n){e.parent.data.r2t[n]=t+e.data._computed_length})),delete e.data.r2t),delete e.data._computed_length)});var i=t.get_root_node().data.r2t;return t.traverse_and_compute(e=>{t.is_leafnode(e)&&(e.data.root_to_tip=i[e.data.leaf_index]||0,delete e.data.leaf_index)}),delete t.get_root_node().data.r2t,t}tt.prototype.is_leafnode=a,tt.prototype.mrca=function(){var t,e;return t=(t=1==arguments.length?arguments[0]:Array.from(arguments)).map((function(t){return"string"==typeof t?t:t.name})),this.traverse_and_compute((function(s){s.children?s.parent?(s.mrca=n.union(...s.descendants().map(t=>t.mrca)),e||s.mrca.length!=t.length||(e=s)):e||(e=s):s.mrca=n.intersection([s.name],t)})),e},tt.prototype.has_branch_lengths=function(){let t=this.branch_length;return!!t&&n.every(this.nodes.descendants(),(function(e){return!e.parent||!n.isUndefined(t(e))}))},tt.prototype.get_branch_lengths=function(){let t=this.branch_length;return n.map(this.nodes.descendants(),e=>t(e))},tt.prototype.branch_name=function(t){return arguments.length?(this.node_label=t||def_node_label,this):this.node_label},tt.prototype.normalize_branch_lengths=function(t){let e=this.branch_length,s=n.map(this.nodes.descendants(),(function(t){return e(t)?e(t):null}));const i=n.max(s),a=n.min(s);return n.each(this.nodes.descendants(),t=>{let n=e(t);n&&e(t,(n-a)/(i-a))}),this},tt.prototype.scale_branch_lengths=function(t){let e=this.branch_length;return n.each(this.nodes.descendants(),n=>{let s=e(n);s&&e(n,t(s))}),this},tt.prototype.get_newick=function(t){let e=this;t||(t=t=>t.data.name);let n=[];return t=t||"",function s(i){a(i)||(n.push("("),i.children.forEach((function(t,e){e&&n.push(","),s(t)})),n.push(")")),n.push(t(i));let r=e.branch_length_accessor(i);void 0!==r&&n.push(":"+r)}(this.nodes),n.join("")+";"},tt.prototype.resort_children=function(t,e,n){return this.nodes.sum((function(t){return t.value})).sort(t),this.display&&(this.display.update_layout(this.nodes),this.display.update()),this},tt.prototype.set_branch_length=function(t){return arguments.length?(this.branch_length_accessor=t||b,this):this.branch_length_accessor},tt.prototype.max_parsimony=function(t,e){const s=n.partial((function(t,e){if(t.mp=[[0,0],[!1,!1]],a(t))t.mp[1][0]=t.mp[1][1]=t.data.trait==e||!1,t.mp[0][0]=t.mp[1][0]?1:0,t.mp[0][1]=1-t.mp[0][0];else{t.children.forEach(s);var n=t.children.reduce((function(t,e){return e.mp[0][0]+t}),0),i=t.children.reduce((function(t,e){return e.mp[0][1]+t}),0);t.data.trait==e?(t.mp[0][0]=i+1,t.mp[1][0]=!0,t.mp[0][1]=i,t.mp[1][1]=!0):(n<i+1?(t.mp[0][0]=n,t.mp[1][0]=!1):(t.mp[0][0]=i+1,t.mp[1][0]=!0),i<n+1?(t.mp[0][1]=i,t.mp[1][1]=!0):(t.mp[0][1]=n+1,t.mp[1][1]=!1))}}),n,e);s(this.nodes),this.nodes.each(t=>{t.parent?t.mp=t.mp[1][t.parent.mp?1:0]:t.mp=t.mp[1][t.mp[0][0]<t.mp[0][1]?0:1],t.mp&&(t.data.trait=e)})},tt.prototype.leftChildRightSibling=g,n.extend(tt.prototype,r),n.extend(tt.prototype,v),n.extend(tt.prototype,d);const it=e.timeParse("%Y%m%d"),at=/([0-9]{4}).?([0-9]{2}).?([0-9]{2})$/g,rt=function(t){if(e.layout.phylotree.is_leafnode(t)&&"name"in t){var n=at.exec(t.name);if(n)return n[1]+n[2]+n[3]}return null};t.center_of_tree=function(t,e){e=e||2;var s=et(t),i=Number.MAX_VALUE,a=0,r=null;return 2==e?t.traverse_and_compute((function(t){if(t.parent){var e=0,o=0,l=0,h=0,c=0;n.each(t.cot_path_to_leaves_below,(function(t){e+=t,o+=t*t,c++})),n.each(t.cot_path_to_leaves_above,(function(t){l+=t,h+=t*t}));var d=s-c,_=(l-e+t.cot_computed_length*d)/s;_<0?_=0:_>t.cot_computed_length&&(_=t.cot_computed_length);var p=h+o+2*(l*(t.cot_computed_length-_)+e*_)+c*_*_+(t.cot_computed_length-_)*(t.cot_computed_length-_)*d;p<i&&(r=t,a=_/t.cot_computed_length,i=p),delete t.cot_computed_length,delete t.cot_path_to_leaves_below,delete t.cot_path_to_leaves_above,delete t.cot_leaf_index}})):t.traverse_and_compute((function(t){if(t.parent)for(var s=t.cot_computed_length>0?.05*t.cot_computed_length:.1,o=0;o<t.cot_computed_length;){var l=0;n.each(t.cot_path_to_leaves_below,(function(t){l+=Math.pow(t+o,e)})),n.each(t.cot_path_to_leaves_above,(function(n){l+=Math.pow(n+(t.cot_computed_length-o),e)})),l<i&&(r=t,a=o/t.cot_computed_length,i=l),o+=s}})),{location:r,breakpoint:a,distance:i}},t.cluster_picker=function(t,e,s,i,a){i=i||t.get_root_node(),a=n.isNumber(a)?a:1;let r=t.branch_length;t.traverse_and_compute((function(t){if(t.parent){if(t._computed_length=r(t),!n.isNumber(t._computed_length))throw"cluster_picker cannot be run on trees with missing branch lengths";t.max_path_length=0}})),t.traverse_and_compute((function(t){t.parent&&(t.parent.max_path_length=Math.max(t.parent.max_path_length,t.max_path_length+t._computed_length))}));var o=[];return t.traverse_and_compute(n.noop,"pre-order",i,(function(i){if(!t.is_leafnode(i)){var r=n.isString(i.data.bootstrap_values)?+i.data.bootstrap_values:a;if(r>=e){var l=n.reduce(i.children,(function(t,e){return e.max_path_length+e._computed_length+t}),0);if(l<=s)return o.push({root:i,diameter:l,bootstrap:r}),!0}}return!1})),t.traverse_and_compute((function(t){t.parent&&(delete t._computed_length,delete t.max_path_length)}),"post-order",i),n.each(o,(function(e){e.members=[],t.traverse_and_compute((function(n){t.is_leafnode(n)&&e.members.push(n)}),"post-order",e.root)})),o},t.compute_midpoint=function(t){if(!t.has_branch_lengths())throw"Center of tree calculation cannot be performed on trees that do not have fully specified branch lengths";var e=t.branch_length;t.traverse_and_compute((function(n){if(n.parent){var s,i=e(n);t.is_leafnode(n)?(s=n,n.max_path=0,n.max_path_terminus=n):(i+=n.max_path,s=n.max_path_terminus),(!n.parent.max_path||n.parent.max_path<i)&&(n.parent.max_path=i,n.parent.max_path_terminus=s)}}));var n=t.get_root_node(),s=0;if(n.children.forEach((function(t){if(t.max_path_terminus!==n.max_path_terminus){var i=t.max_path+e(t);i>=s&&(s=i,t.max_path_terminus)}})),n.max_path>s){s=.5*(s+n.max_path);for(var i=n.max_path_terminus;;){var a=e(i);if(!(a<=s))return{location:i,breakpoint:s/a};s-=a,i=i.parent}}return{location:n,breakpoint:0}},t.extract_dates=function(t,e,n=it){return e=e||rt,t.traverse_and_compute((function(t){var s=e(t);if(s)try{t.data.date_value=n(s);var i=t.data.date_value.getFullYear(),a=new Date(i,0,1),r=new Date(i+1,0,1);return void(t.data.decimal_date_value=i+(t.data.date_value-a)/(r-a))}catch(t){}t.data.date_value=null,t.data.decimal_date_value=null})),t},t.fit_root_to_tip=function(t){var e=[],s=0,i=0;!function(t){t.traverse_and_compute((function(e){t.is_leafnode(e)&&(e.data.copy_number=1)}))}(t),st(t),t.traverse_and_compute((function(s){t.is_leafnode(s)&&!n.isNull(s.data.decimal_date_value)&&e.push([s.data.decimal_date_value,s.data.rtta,s.data.copy_number])}));let a=nt(e);return t.traverse_and_compute((function(r){if(t.is_leafnode(r)&&!n.isNull(r.data.decimal_date_value)){!function t(e,n,s,i,a){var r=e.branch_length(n),o=!1;if(s||(i=n.data.root_to_tip,a=0,o=!0),n.children)for(var l=0;l<n.children.length;l++)n.children[l]!=s?t(e,n.children[l],n,i,a):o=!0;n.data.rtta=n.data.root_to_tip-i+a,o&&(i-=r,a+=r),n.parent&&o&&t(e,n.parent,n,i,a)}(t,r,null,0,0),e=[],t.traverse_and_compute((function(s){t.is_leafnode(s)&&!n.isNull(s.data.decimal_date_value)&&e.push([s.data.decimal_date_value,s.data.rtta,s.data.copy_number])}));var o=nt(e),l=o.r2;l>s&&(s=l,i=r,a=o)}})),{root:i,fit:a}},t.fitch=function(t){u(t.nodes,t=>{t.visited=!0})},t.inOrder=m,t.leftChildRightSibling=g,t.load_annotations=h,t.pairwise_distances=et,t.parse_annotations=l,t.phylopart=function(t,e,s,i,a){i=n.isNumber(i)?i:1;var r=et(t),o=t.get_root_node().children[0],l=Number.MAX_VALUE,h=Number.MAX_VALUE;if(!(s>0&&s<1))throw"Invalid percentile threshold in perform_phylopart";t.traverse_and_compute((function(e){t.is_leafnode(e)&&(e.cot_computed_length<l?(l<h&&(h=l),l=e.cot_computed_length):e.cot_computed_length<h&&(h=e.cot_computed_length))})),l+=h;var c=n.reduce(o.cot_path_to_leaves_below,(function(t,e){return e>t?e:t}),0)+n.reduce(o.cot_path_to_leaves_above,(function(t,e){return e>t?e:t}),0)+o.cot_computed_length-l;n.isUndefined(a)&&(a=Math.min(.001,c/100));var d=1+(c/a>>0);d>500&&(a=c/(d=500));var _=t.get_root_node();_.paths_to_leaves=new Array(r),n.each(_.children,(function(t){n.each(_.cot_path_to_leaves_below,(function(e,n){_.paths_to_leaves[n]=e+t.cot_computed_length}))})),t.traverse_and_compute((function(e){if(!t.is_leafnode(e)){e.histogram=new Array(d);for(var s=0;s<d;s++)e.histogram[s]=0;if(e.parent){var i=0;e.paths_to_leaves=[],n.each(e.cot_path_to_leaves_below,(function(t,n){e.paths_to_leaves[i++]=t}))}}delete e.cot_path_to_leaves_above,delete e.cot_path_to_leaves_below})),t.traverse_and_compute((function(e){if(!t.is_leafnode(e)){for(var n=0;n<e.paths_to_leaves.length;n++)for(var s=n+1;s<e.paths_to_leaves.length;s++){var i=e.paths_to_leaves[n]+e.paths_to_leaves[s];e.histogram[(i-l)/a>>0]++}e.leaf_count=e.paths_to_leaves.length,delete e.paths_to_leaves}}));for(var p=(r-1)*r/2*s,u=0;u<d-1&&p>_.histogram[u];u++)p-=_.histogram[u];var f=l+(u+(_.histogram[u]-p)/_.histogram[u])*a,m=[];return t.traverse_and_compute(n.noop,"pre-order",null,(function(s){if(!t.is_leafnode(s)){var r=n.isString(s.data.bootstrap_values)?+s.data.bootstrap_values:i;if(r>=e){for(var o=s.leaf_count*(s.leaf_count-1)*.25,h=0;h<d-1&&o>s.histogram[h];h++)o-=s.histogram[h];var c=l+(h+(s.histogram[h]-o)/s.histogram[h])*a;if(c<=f)return m.push({root:s,median:c,bootstrap:r}),!0}}return!1})),t.traverse_and_compute((function(e){t.is_leafnode(e)||"histogram"in e&&(delete e.histogram,delete e.leaf_count)})),n.each(m,(function(e){e.members=[],t.traverse_and_compute((function(n){t.is_leafnode(n)&&e.members.push(n)}),"post-order",e.root)})),m},t.phylotree=tt,t.postOrder=u,t.preOrder=f,t.root_to_tip=st,t.sackin=function(t){let e=t.get_tips(),s=n.map(e,t=>t.depth);return n.reduce(s,(function(t,e){return t+e}),0)},Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=phylotree.min.js.map
